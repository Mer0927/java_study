추상 Class

absrtact 메서드는 바디없이 ; 정의

absrtact 클래스는 정상형태의 클래스이나, 객체를 만들지 못한다.

--------------------------------------------------------
상속 연습문제

> 자동차 렌트회사 관리 프로그램

관리차종: 승용차, 트럭

-관리목록
승용차: 번호판, 차종, 배기량, 최대승차인원
트럭: 번호판, 차종, 배기량, 최대적재량

승용차와 트럭 클래스를 각각 작성하고 객체를 만들어 배열에 저장 및 출력
승용차와 트럭의 공통 변수: Trans Class에 정의.
승용차와 트럭은 Trans를 상속하여 정의.

Test 샘플코드:
Trans[] tarr = new Trans[1000];
int count = 0;
tarr[count++] = new 승용차("1가 1111", "소나타", 2000, 5);
tarr[count++] = new 트럭("2가 1111", "포터", 2000, 1000);
tarr[count++] = new 승용차("1가 2222", "카니발", 2000, 7);
tarr[count++] = new 트럭("2가 2222", "포터", 2000, 5000);

for(int i=0; i<count; i++){
	System.out.println(tarr[i].getInfo());
	}

**************************************************************************
	
★ 자바 웹 게시판 작성순서
>> 화면 설계(스토리보드 ppt로 작성)
	- 첫화면(목록, 등록화면, 상세보기, 수정폼, 수정결과)
	- SQL작성(목록, 등록, 상세, 수정, 삭제)
	- VO클래스 작성(테이블당 1개의 VO Class)
	- DAO클래스 작성(테이블당 1개)
		> 목록기능, 상세보기, 수정하기, 삭제하기 함수 작성
		> 각 함수에 SQL을 실행하는 자바코드 작성
	- 서블릿 코드 작성
	- 서블릿내 각 기능별 함수 작성
	- 각 화면별 JSP 작성, CSS, JS 수정
	
-------------------------------------------------------------------
	
요구사항에 따른 자바코드 작성순서
	- 이클립스 자바 프로젝스 생성
	- 이름은 적당히 중복안되게 자유롭게 > 모듈 생성x
	- 클래스 생성 > 클래스이름 > 메인함수 체크
	- 샘플코드를 메인 메서드 안에 작성 및 저장
	- 빨간밑줄 보이는 곳에 마우스 올려서 클래스 생성

-----------------------------------------------------------------

- 가장 상위 클래스 생성
	변수를 선언(직접 코딩)
	모든 변수를 파라미터로 받는 생성자 메서드 작성(Source > Generate Constructor Using Fields)
	기본 생성자 메서드를 작성(ctrl+space > enter)
	gerrer/setter 메서드 작성
	getInfo() 메서드 작성(모든 변수를 ,로 연결한 문자열을 반환)
	
- 자식클래스 작성
	변수를 선언(직접 코딩)
	모든 변수를 파라미터로 받는 생성자 메서드 작성 > 파라미터는 부모의 변수와 자식의 변수를 함께받는 생성자 선언
	생성자 내부에서 파라미터 중 부모클래스에서 관리하는 변수를 super(...)로 넘겨주기
	나머지 변수만 멤버변수로 저장
	기본생성자 작성
	getter/setter 메서드 작성
	getInfo() 작성 - super.getInfo()에 자신의 모든 변수를 ,로 연결하여 반환
	
------------------------------------------------------------------------------------
**학원관리 프로그램**
관리해야하는 대상: 직원, 강사, 수강생
직원: 이름, 주민번호, 전화, 부서
강사: 이름, 주민번호, 전화, 강의과목
수강생: 이름, 주민번호, 전화, 수강과목

사람 클래스는 직원, 강사, 수강생들의 공통변수를 관리.
사람 클래스에 getInfo()는 모든 변수정보를 컴마로 연결한 문자열을 반환
직원, 강사, 수강생 클래스는 사람클래스를 상속하여 작성.
직원, 강사, 수강생 클래스에 getInfo()는 부모의 getInfo()와 자신의 모든 변수정보를 컴마로 연결한 문자열을 반환

* 아래 코드가 동작하도록 클래스 작성
사람[] parr = new 사람[1000];
int count = 0;
parr[count++] = new 직원("홍길동", "111-222", "010-111", "총무부");
parr[count++] = new 직원("김길동", "111-333", "010-222", "관리부");
parr[count++] = new 강사("박길동", "111-444", "010-223", "자바");
parr[count++] = new 강사("이길동", "111-555", "010-332", "파이썬");
parr[count++] = new 수강생("최길동", "111-666", "010-443", "자바기본");
parr[count++] = new 수강생("강길동", "111-777", "010-553", "파이썬중급");

--------------------------------------------------------------------------------------------------

클래스 =/= 객체

클래스 = 붕어빵 틀 > 1개만 존재
클래스 내의 객체 = 붕어빵틀에서 나온 붕어빵 > 여러개 존재 가능

Trans t = new Trans(); < t는 선언된 변수 / = 는 대입연산자 / new Trans(); Trans 객체를 생성하는 함수